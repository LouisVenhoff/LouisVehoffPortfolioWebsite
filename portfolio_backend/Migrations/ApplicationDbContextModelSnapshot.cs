// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio_backend.Data;

#nullable disable

namespace portfolio_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("portfolio_backend.Models.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MarkdownPath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("RepositoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepositoryId")
                        .IsUnique();

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("portfolio_backend.Models.Repository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CloneLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Repositorys");
                });

            modelBuilder.Entity("portfolio_backend.Models.Doc", b =>
                {
                    b.HasOne("portfolio_backend.Models.Repository", "Repository")
                        .WithOne("Doc")
                        .HasForeignKey("portfolio_backend.Models.Doc", "RepositoryId");

                    b.Navigation("Repository");
                });

            modelBuilder.Entity("portfolio_backend.Models.Repository", b =>
                {
                    b.Navigation("Doc");
                });
#pragma warning restore 612, 618
        }
    }
}
